

====================================================================================

You can clone the Luminoth repo either from its official repo or the forked repo, which has some modifications made internally.
Official repo: https://github.com/tryolabs/luminoth.git
Forked repo: https://github.com/cramraj8/luminoth.git


====================================================================================


Raw data can be found in different formats. However, we need to bring that to PascalVoc format in order to train the model.
PascalVoc data folder will look like
    - Data
        |
        |-- Annotations
        |
        |-- ImageSets
        |       |
        |       |--- Main
        |               |
        |               |---- <classname>_train.txt
        |               |
        |               |---- train.txt
        |
        |-- JPEGImages
        |
        |-- test_JPEGImages


Example:
    if our raw dataset has this following format of annotations, we need to convert the csv file to xml file.
    PascalVoc format recommeds annotations in XML.
    Basic information we need from csv file are,
        1. annotations for each image converted into each XML file
            a. image_id
            b. each bounding box coordinates in either convention
                - x_min, y_min, x_max, y_max
                - x_center, y_center, width, height
            c. class label for each bounding box objects
                for class-agnostic model, we can represent objects into objectness class

    XML format:

    root: annotation: version: 1.0
        subelement: folder: <project_name>
        subelement: filename: <image_name>
        subelement: source
            subelement: database: database_name
            subelement: annotation: <project_name>
            subelement: image: None
            subelement: flickrid: None
        subelement: owner: <author_name>
        subelement: size
            subelement: width : <width_value>
            subelement: height : <height_value>
            subelement: depth : <depth_value>
        subelement: segmented: '0'

    .... continues to include each objects ....

        subelement: object
            subelement: name: <class_name>
            subelement: pose: 'Unspecified'
            subelement: truncated: '0'
            subelement: difficult: '0'
            subelement: bndbox
                subelement: xmin : <xmin_value>
                subelement: ymin : <ymin_value>
                subelement: xmax : <xmax_value>
                subelement: ymax : <ymax_value>

            Above 'object block' repeatedly added to the root to represent each object properties.


    to create txt files inside ImageSets > Main , by running the write_txt.py




====================================================================================

To create tfrecord data

place image, annotations, train.txt in appropriate arrangements inside the 'pascalvoc_format_data' folder.
*** if you are using Mac, make sure to delete all .DS_Store files in each folder hierarchies inside 'pascalvoc_format_data.'

CLI:
    $ lumi dataset transform \
        --type pascal \
        --data-dir ./data/pascalvoc_format_data \
        --output-dir ./data/tf_dataset \
        --split train

    you may want to eexecute this command by standing inside luminoth/ folder.





